module "ebe" {
  source                                     = "../_module/ebe"
  region                                     = local.cfg["region"]
  description                                = local.cfg["description"]
  tags                                       = local.cfg["tags"]
  name                                       = local.cfg["name"]
  elastic_beanstalk_application_name         = local.cfg["elastic_beanstalk_application_name"]
  environment_type                           = local.cfg["environment_type"]
  loadbalancer_type                          = local.cfg["loadbalancer_type"]
  loadbalancer_crosszone                     = local.cfg["loadbalancer_crosszone"]
  dns_zone_id                                = local.cfg["dns_zone_id"]
  dns_subdomain                              = local.cfg["dns_subdomain"]
  additional_security_groups                 = local.cfg["additional_security_groups"]
  availability_zone_selector                 = local.cfg["availability_zone_selector"]
  instance_type                              = local.cfg["instance_type"]
  enable_spot_instances                      = local.cfg["enable_spot_instances"]
  spot_fleet_on_demand_base                  = local.cfg["spot_fleet_on_demand_base"]
  spot_fleet_on_demand_above_base_percentage = local.cfg["spot_fleet_on_demand_above_base_percentage"]
  spot_max_price                             = local.cfg["spot_max_price"]
  enhanced_reporting_enabled                 = local.cfg["enhanced_reporting_enabled"]
  managed_actions_enabled                    = local.cfg["managed_actions_enabled"]
  autoscale_min                              = local.cfg["autoscale_min"]
  autoscale_max                              = local.cfg["autoscale_max"]
  solution_stack_name                        = local.cfg["solution_stack_name"]
  wait_for_ready_timeout                     = local.cfg["wait_for_ready_timeout"]
  tier                                       = local.cfg["tier"]
  version_label                              = local.cfg["version_label"]
  rolling_update_enabled                     = local.cfg["rolling_update_enabled"]
  rolling_update_type                        = local.cfg["rolling_update_type"]
  updating_min_in_service                    = local.cfg["updating_min_in_service"]
  updating_max_batch                         = local.cfg["updating_max_batch"]
  health_streaming_enabled                   = local.cfg["health_streaming_enabled"]
  health_streaming_delete_on_terminate       = local.cfg["health_streaming_delete_on_terminate"]
  health_streaming_retention_in_days         = local.cfg["health_streaming_retention_in_days"]
  healthcheck_url                            = local.cfg["healthcheck_url"]
  enable_log_publication_control             = local.cfg["enable_log_publication_control"]
  enable_stream_logs                         = local.cfg["enable_stream_logs"]
  logs_delete_on_terminate                   = local.cfg["logs_delete_on_terminate"]
  logs_retention_in_days                     = local.cfg["logs_retention_in_days"]
  loadbalancer_certificate_arn               = local.cfg["loadbalancer_certificate_arn"]
  loadbalancer_ssl_policy                    = local.cfg["loadbalancer_ssl_policy"]
  loadbalancer_security_groups               = local.cfg["loadbalancer_security_groups"]
  loadbalancer_managed_security_group        = local.cfg["loadbalancer_managed_security_group"]
  http_listener_enabled                      = local.cfg["http_listener_enabled"]
  application_port                           = local.cfg["application_port"]
  preferred_start_time                       = local.cfg["preferred_start_time"]
  update_level                               = local.cfg["update_level"]
  instance_refresh_enabled                   = local.cfg["instance_refresh_enabled"]
  keypair                                    = local.cfg["keypair"]
  root_volume_size                           = local.cfg["root_volume_size"]
  root_volume_type                           = local.cfg["root_volume_type"]
  autoscale_measure_name                     = local.cfg["autoscale_measure_name"]
  autoscale_statistic                        = local.cfg["autoscale_statistic"]
  autoscale_unit                             = local.cfg["autoscale_unit"]
  autoscale_lower_bound                      = local.cfg["autoscale_lower_bound"]
  autoscale_lower_increment                  = local.cfg["autoscale_lower_increment"]
  autoscale_upper_bound                      = local.cfg["autoscale_upper_bound"]
  autoscale_upper_increment                  = local.cfg["autoscale_upper_increment"]
  elb_scheme                                 = local.cfg["elb_scheme"]
  vpc_subnets                                = local.cfg["vpc_subnets"]
  vpc_elb_subnets                            = local.cfg["vpc_elb_subnets"]
  additional_settings                        = local.cfg["additional_settings"]
  env_vars                                   = local.cfg["env_vars"]
  ami_id                                     = local.cfg["ami_id"]
  associate_public_ip_address                = local.cfg["associate_public_ip_address"]
  deployment_policy                          = local.cfg["deployment_policy"]
  deployment_batch_size_type                 = local.cfg["deployment_batch_size_type"]
  deployment_batch_size                      = local.cfg["deployment_batch_size"]
  deployment_ignore_health_check             = local.cfg["deployment_ignore_health_check"]
  deployment_timeout                         = local.cfg["deployment_timeout"]
  extended_ec2_policy_document               = local.cfg["extended_ec2_policy_document"]
  prefer_legacy_ssm_policy                   = local.cfg["prefer_legacy_ssm_policy"]
  prefer_legacy_service_policy               = local.cfg["prefer_legacy_service_policy"]
  scheduled_actions                          = local.cfg["scheduled_actions"]
  aws_s3_bucket_elb_logs                     = local.cfg["aws_s3_bucket_elb_logs"]
  iam_role_name                              = local.cfg["iam_role_name"]
  iam_role_instance_profile_name             = local.cfg["iam_role_instance_profile_name"]
  iam_role_service_name                      = local.cfg["iam_role_service_name"]
}
