module "rds" {
#  source  = "../_module/rds"
  source  = "terraform-aws-modules/rds/aws"
  
  identifier = local.cfg["identifier"]
  name = local.cfg["name"]
  instance_class = local.cfg["instance_class"]
  username = local.cfg["username"]
  password = local.cfg["password"]
  port = local.cfg["port"]
  allocated_storage = local.cfg["allocated_storage"]
  engine = local.cfg["engine"]
  engine_version = local.cfg["engine_version"]
  storage_type = local.cfg["storage_type"]
  storage_encrypted = local.cfg["storage_encrypted"]
  kms_key_id = local.cfg["kms_key_id"]
  replicate_source_db = local.cfg["replicate_source_db"]
  license_model = local.cfg["license_model"]
  iam_database_authentication_enabled = local.cfg["iam_database_authentication_enabled"]
  domain = local.cfg["domain"]
  domain_iam_role_name = local.cfg["domain_iam_role_name"]
  skip_final_snapshot = local.cfg["skip_final_snapshot"]
  snapshot_identifier = local.cfg["snapshot_identifier"]
  copy_tags_to_snapshot = local.cfg["copy_tags_to_snapshot"]
  final_snapshot_identifier = local.cfg["final_snapshot_identifier"]
  final_snapshot_identifier_prefix = local.cfg["final_snapshot_identifier_prefix"]
  vpc_security_group_ids = local.cfg["vpc_security_group_ids"]
  availability_zone = local.cfg["availability_zone"]
  multi_az = local.cfg["multi_az"]
  iops = local.cfg["iops"]
  publicly_accessible = local.cfg["publicly_accessible"]
  monitoring_interval = local.cfg["monitoring_interval"]
  monitoring_role_arn = local.cfg["monitoring_role_arn"]
  monitoring_role_name = local.cfg["monitoring_role_name"]
  create_monitoring_role = local.cfg["create_monitoring_role"]
  allow_major_version_upgrade = local.cfg["allow_major_version_upgrade"]
  auto_minor_version_upgrade = local.cfg["auto_minor_version_upgrade"]
  apply_immediately = local.cfg["apply_immediately"]
  maintenance_window = local.cfg["maintenance_window"]
  backup_retention_period = local.cfg["backup_retention_period"]
  backup_window = local.cfg["backup_window"]
  s3_import = local.cfg["s3_import"]
  tags = local.cfg["tags"]
  db_instance_tags = local.cfg["db_instance_tags"]
  db_option_group_tags = local.cfg["db_option_group_tags"]
  db_parameter_group_tags = local.cfg["db_parameter_group_tags"]
  db_subnet_group_tags = local.cfg["db_subnet_group_tags"]
  create_db_subnet_group = local.cfg["create_db_subnet_group"]
  db_subnet_group_name = local.cfg["db_subnet_group_name"]
  db_subnet_group_use_name_prefix = local.cfg["db_subnet_group_use_name_prefix"]
  db_subnet_group_description = local.cfg["db_subnet_group_description"]
  subnet_ids = local.cfg["subnet_ids"]
  create_db_parameter_group = local.cfg["create_db_parameter_group"]
  parameter_group_name = local.cfg["parameter_group_name"]
  parameter_group_use_name_prefix = local.cfg["parameter_group_use_name_prefix"]
  parameter_group_description = local.cfg["parameter_group_description"]
  family = local.cfg["family"]
  parameters = local.cfg["parameters"]
  create_db_option_group = local.cfg["create_db_option_group"]
  option_group_name = local.cfg["option_group_name"]
  option_group_use_name_prefix = local.cfg["option_group_use_name_prefix"]
  option_group_description = local.cfg["option_group_description"]
  major_engine_version = local.cfg["major_engine_version"]
  options = local.cfg["options"]
  create_db_instance = local.cfg["create_db_instance"]
  timezone = local.cfg["timezone"]
  character_set_name = local.cfg["character_set_name"]
  enabled_cloudwatch_logs_exports = local.cfg["enabled_cloudwatch_logs_exports"]
  timeouts = local.cfg["timeouts"]
  option_group_timeouts = local.cfg["option_group_timeouts"]
  deletion_protection = local.cfg["deletion_protection"]
  performance_insights_enabled = local.cfg["performance_insights_enabled"]
  performance_insights_retention_period = local.cfg["performance_insights_retention_period"]
  performance_insights_kms_key_id = local.cfg["performance_insights_kms_key_id"]
  max_allocated_storage = local.cfg["max_allocated_storage"]
  ca_cert_identifier = local.cfg["ca_cert_identifier"]
  delete_automated_backups = local.cfg["delete_automated_backups"]
  create_random_password = local.cfg["create_random_password"]
  random_password_length = local.cfg["random_password_length"]
}