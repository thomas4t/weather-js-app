module "role" {
  source  = "terraform-aws-modules/iam/aws//modules/iam-assumable-role"
  role_name = local.cfg["role_name"]
  trusted_role_actions = local.cfg["trusted_role_actions"]
  trusted_role_arns = local.cfg["trusted_role_arns"]
  trusted_role_services = local.cfg["trusted_role_services"]
  mfa_age = local.cfg["mfa_age"]
  max_session_duration = local.cfg["max_session_duration"]
  create_role = local.cfg["create_role"]
  create_instance_profile = local.cfg["create_instance_profile"]
  role_description = local.cfg["role_description"]
  role_path = local.cfg["role_path"]
  role_requires_mfa = local.cfg["role_requires_mfa"]
  role_permissions_boundary_arn = local.cfg["role_permissions_boundary_arn"]
  tags = local.cfg["tags"]
  custom_role_policy_arns = local.cfg["custom_role_policy_arns"]
  number_of_custom_role_policy_arns = local.cfg["number_of_custom_role_policy_arns"]
  admin_role_policy_arn = local.cfg["admin_role_policy_arn"]
  poweruser_role_policy_arn = local.cfg["poweruser_role_policy_arn"]
  readonly_role_policy_arn = local.cfg["readonly_role_policy_arn"]
  attach_admin_policy = local.cfg["attach_admin_policy"]
  attach_poweruser_policy = local.cfg["attach_poweruser_policy"]
  attach_readonly_policy = local.cfg["attach_readonly_policy"]
  force_detach_policies = local.cfg["force_detach_policies"]
  role_sts_externalid = local.cfg["role_sts_externalid"]
}
