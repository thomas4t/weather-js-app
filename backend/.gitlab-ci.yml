include:
  - local: '/backend/.gitlab-ci.base.yml'

variables:
  BACKEND_COMPONENT: "backend"

# This job extracts FE version from the package.json and shares it in an env variable with following jobs
# The version is labeled with GIT ref slug
# BACKEND_IMAGE is then used to deploy the app. If backend image is also built, the var is then replaced
# with the pinned image version to prevent deploying versions from different pipelines.
backend-version:
  image: "$BUILDER_IMAGE"
  stage: version
  script:
    - cd backend
    - VERSION=$(jq -r '.version' package.json)
    - VERSION="$VERSION-$GIT_SLUG"
    - echo "BACKEND_VERSION=$VERSION" > ci.env
    - echo "BACKEND_IMAGE=$DOCKER_REPOSITORY/$BACKEND_COMPONENT:$VERSION" >> ci.env
    - cat ci.env
  artifacts:
    reports:
      dotenv: backend/ci.env

backend-test:
  image: "$BACKEND_BASE_IMAGE"
  stage: test
  allow_failure: false
  variables:
    NODE_ENV: test
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  script:
    - cd backend
    - yarn install --cache-folder .yarn
    - echo "${CI_COMMIT_TITLE}\n\n${CI_COMMIT_DESCRIPTION}" | node_modules/.bin/commitlint
    - yarn test:ci
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
    - backend/node_modules/
    - backend/yarn.lock
  artifacts:
    expire_in: 1 week
    reports:
      junit: backend/junit.xml
  only: &backend-only
    changes:
      - backend/**/*

backend-test-e2e:
  image: "$BACKEND_BASE_IMAGE"
  stage: test
  allow_failure: false
  services:
    - name: postgres:14.2-alpine
      alias: db # https://gitlab.com/gitlab-org/gitlab-runner/-/issues/2699
  variables:
    NODE_ENV: test
    FF_NETWORK_PER_BUILD: "true" # enable network per build feature flag so that services can be resolved
    # PG vars
    POSTGRES_USER: "postgres"
    POSTGRES_PASSWORD: "postgres"
    POSTGRES_DB: "test"
    TZ: 'Europe/Prague'
    PGTZ: 'Europe/Prague'
    # app vars
    DATABASE_HOST: "db"
    DATABASE_USER: "postgres"
    DATABASE_PASSWORD: "postgres"
    DATABASE_DB: "test"
  coverage: /All\sfiles.*?\s+(\d+.\d+)/
  script:
    - cd backend
    - yarn install --cache-folder .yarn
    - yarn test:e2e:ci
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
    - backend/node_modules/
    - backend/yarn.lock
  artifacts:
    expire_in: 1 week
    reports:
      junit: backend/junit.xml
  only: *backend-only

backend-image:
  extends: .kaniko-build-template
  dependencies: ["backend-version"]
  needs: ["backend-version"]
  variables:
    COMPONENT: $BACKEND_COMPONENT
    CONTEXT: "backend"
    DOCKERFILE: "backend/Dockerfile"
  before_script:
    # it needs to be here due to a limit on gitlab ci variable recursion
    - export BUILD_ARGS="--build-arg=BASE_IMAGE=$BACKEND_BASE_IMAGE"
  only: *backend-only

backend-fixtures-load:
  extends: .deploy-template
  stage: post-deploy
  when: manual
  script:
    - ssh $SSH_HOST "cd $ENV_NAME && docker-compose exec -T app-be yarn fixtures:load"

backend-data-recreate:
  extends: .deploy-template
  stage: post-deploy
  when: manual
  script:
    - ssh $SSH_HOST "cd $ENV_NAME && docker-compose exec -T app-be yarn data-recreate:ci"
  except:
    - master
